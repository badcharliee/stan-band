{"ast":null,"code":"var _jsxFileName = \"/Users/charliewilson/personal/stan-band/client/src/components/bands/Band.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { stanBand, unstanBand, newCommentChange, addNewComment } from '../../actions';\nimport users from '../../apis/users';\nimport Comment from './Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Band extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onStanClick = () => {\n      this.props.stanBand();\n    };\n\n    this.onUnstanClick = () => {\n      this.props.unstanBand();\n    };\n\n    this.onNewCommentChange = e => {\n      this.props.newCommentChange(e.target.value);\n    };\n\n    this.onAddCommentClick = () => {\n      this.props.addNewComment();\n    };\n\n    this.fetchImageUrl = async () => {\n      const response = await users.get(`?userId=${this.props.currentBand.introducerUserId}`);\n      this.setState({\n        imageUrl: response.data[0].imageUrl\n      });\n    };\n\n    this.state = {\n      imageUrl: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchImageUrl();\n  }\n\n  renderStanButton() {\n    const currentUser = this.props.currentUser;\n    const isSignedIn = this.props.isSignedIn;\n    const isStanning = currentUser && currentUser.stanning.includes(this.props.currentBand.spotifyBandId);\n\n    if (isSignedIn && isStanning) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.onUnstanClick,\n        className: \"ui secondary focusable button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"check icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), \"Unstan\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    } else if (isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.onStanClick,\n        className: \"ui secondary focusable button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"add icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \"Stan\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui secondary focusable button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"add icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), \"Log in to Stan\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  renderComments() {\n    const comments = this.props.currentBand.comments && this.props.currentBand.comments.length > 0 ? this.props.currentBand.comments : null;\n\n    if (comments) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentCards\",\n        children: comments.map(comment => {\n          return /*#__PURE__*/_jsxDEV(Comment, {\n            comment: comment\n          }, comment.uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '35px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui segment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"ui left floated header\",\n          children: this.props.currentBand.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui right floated header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui circular grey label\",\n            style: {\n              marginRight: '15px'\n            },\n            children: [this.props.currentBand.stans ? this.props.currentBand.stans.length : 0, \" stans\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), this.renderStanButton()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui clearing divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"ui centered medium rounded image\",\n          src: this.props.currentBand.profileImage,\n          alt: this.props.currentBand.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui center aligned\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => this.props.stanSelected(this.stan),\n            to: \"/stan\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ui black label\",\n              style: {\n                margin: '12px'\n              },\n              children: [\"Introduced by\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail\",\n                children: this.props.currentBand.introducerUserId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"ui centered mini circular image\",\n            src: this.state.imageUrl,\n            alt: \"Introducer Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui header\",\n        style: {\n          color: 'white'\n        },\n        children: \"Comment Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui segment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Leave a comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: e => this.onNewCommentChange(e),\n              value: this.props.newComment ? this.props.newComment : \"\",\n              rows: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: this.onAddCommentClick,\n            className: \"ui submit black button\",\n            style: {\n              marginBottom: '20px'\n            },\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), this.renderComments()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentBand: state.bandSearch.selected,\n    isSignedIn: state.spotifyAuth.isSignedIn,\n    currentUser: state.currentUser.user,\n    newComment: state.bandSearch.newComment\n  };\n};\n\nexport default connect(mapStateToProps, {\n  stanBand,\n  unstanBand,\n  newCommentChange,\n  addNewComment\n})(Band);","map":{"version":3,"sources":["/Users/charliewilson/personal/stan-band/client/src/components/bands/Band.js"],"names":["React","connect","Link","stanBand","unstanBand","newCommentChange","addNewComment","users","Comment","Band","Component","constructor","props","onStanClick","onUnstanClick","onNewCommentChange","e","target","value","onAddCommentClick","fetchImageUrl","response","get","currentBand","introducerUserId","setState","imageUrl","data","state","componentDidMount","renderStanButton","currentUser","isSignedIn","isStanning","stanning","includes","spotifyBandId","renderComments","comments","length","map","comment","uuid","render","marginTop","name","marginRight","stans","profileImage","stanSelected","stan","margin","color","newComment","marginBottom","mapStateToProps","bandSearch","selected","spotifyAuth","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { stanBand, unstanBand, newCommentChange, addNewComment } from '../../actions';\nimport users from '../../apis/users';\nimport Comment from './Comment';\n\nclass Band extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { imageUrl: '' };\n  }\n\n  componentDidMount() {\n    this.fetchImageUrl();\n  }\n\n  onStanClick = () => {\n    this.props.stanBand();\n  }\n\n  onUnstanClick = () => {\n    this.props.unstanBand();\n  }\n\n  onNewCommentChange = (e) => {\n    this.props.newCommentChange(e.target.value);\n  }\n\n  onAddCommentClick = () => {\n    this.props.addNewComment();\n  }\n\n  fetchImageUrl = async () => {\n    const response = await users.get(`?userId=${this.props.currentBand.introducerUserId}`);\n    this.setState({ imageUrl: response.data[0].imageUrl });\n  }\n\n  renderStanButton() {\n    const currentUser = this.props.currentUser;\n    const isSignedIn = this.props.isSignedIn;\n    const isStanning = currentUser && currentUser.stanning.includes(this.props.currentBand.spotifyBandId);\n\n    if (isSignedIn && isStanning) {\n      return (\n        <div onClick={this.onUnstanClick} className=\"ui secondary focusable button\">\n          <i className=\"check icon\"></i>\n          Unstan\n        </div>\n      );\n    } else if (isSignedIn) {\n      return (\n        <div onClick={this.onStanClick} className=\"ui secondary focusable button\">\n          <i className=\"add icon\"></i>\n          Stan\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"ui secondary focusable button\">\n          <i className=\"add icon\"></i>\n          Log in to Stan\n        </div>\n      );\n    }\n\n  }\n\n  renderComments() {\n\n    const comments = this.props.currentBand.comments && this.props.currentBand.comments.length > 0 ? this.props.currentBand.comments : null;\n\n    if (comments) {\n      return (\n        <div className=\"commentCards\">\n          {comments.map(comment => {\n            return (\n              <Comment key={comment.uuid} comment={comment} />\n            );\n          })}\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        No comments\n      </div>\n    );\n\n  }\n\n  render() {\n    return (\n      <div style={{ marginTop: '35px' }}>\n\n        <div className=\"ui segment\">\n          <h1 className=\"ui left floated header\">{this.props.currentBand.name}</h1>\n          <div className=\"ui right floated header\">\n            <div className=\"ui circular grey label\" style={{ marginRight: '15px'}}>{this.props.currentBand.stans ? this.props.currentBand.stans.length : 0} stans</div>\n            {this.renderStanButton()}\n          </div>\n          <div className=\"ui clearing divider\"></div>\n          <img className=\"ui centered medium rounded image\" src={this.props.currentBand.profileImage} alt={this.props.currentBand.name} />\n          <div className=\"ui center aligned\">\n            <Link onClick={() => this.props.stanSelected(this.stan)} to=\"/stan\">\n              <div className=\"ui black label\" style={{ margin: '12px' }}>\n                Introduced by\n                <div className=\"detail\">\n                  {this.props.currentBand.introducerUserId}\n                </div>\n              </div>\n            </Link>\n            <img className=\"ui centered mini circular image\" src={this.state.imageUrl} alt=\"Introducer Profile\"/>\n          </div>\n        </div>\n\n        <div className=\"ui header\" style={{ color: 'white' }}>Comment Thread</div>\n        <div className=\"ui segment\">\n          <div className=\"ui form\">\n            {<div className=\"field\">\n              <label>Leave a comment</label>\n              <textarea onChange={(e) => this.onNewCommentChange(e)} value={this.props.newComment ? this.props.newComment : \"\"} rows=\"2\"></textarea>\n            </div>}\n            {<div onClick={this.onAddCommentClick} className=\"ui submit black button\" style={{ marginBottom: '20px' }}>Add Comment</div>}\n          </div>\n          {this.renderComments()}\n        </div>\n\n\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentBand: state.bandSearch.selected,\n    isSignedIn: state.spotifyAuth.isSignedIn,\n    currentUser: state.currentUser.user,\n    newComment: state.bandSearch.newComment\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    stanBand,\n    unstanBand,\n    newCommentChange,\n    addNewComment\n  }\n)(Band);\n"]},"metadata":{},"sourceType":"module"}