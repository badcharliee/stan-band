{"ast":null,"code":"var _jsxFileName = \"/Users/charliewilson/personal/stan-band/client/src/components/comments/StanProfileComment.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport bands from '../../apis/bands';\nimport { likeComment, unlikeComment } from '../../actions';\nimport '../../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchImageUrl = async () => {\n      const response = await bands.get(`?spotifyBandId=${this.props.comment.bandId}`);\n      console.log(response.data);\n\n      if (this.props.currentUser) {\n        // check if currentUser likes comment\n        const comment = this.props.comment;\n\n        try {\n          if (comment.likers.includes(this.props.currentUser.userId)) {\n            this.setState({\n              imageUrl: response.data[0].imageUrl,\n              isLiked: true\n            });\n            return;\n          }\n        } catch (error) {}\n      }\n\n      this.setState({\n        imageUrl: response.data[0].imageUrl,\n        isLiked: false\n      });\n    };\n\n    this.onLikeButtonClick = () => {\n      if (this.props.currentUser) {\n        if (this.state.isLiked) {\n          this.props.unlikeComment(this.props.comment);\n        } else {\n          this.props.likeComment(this.props.comment);\n        }\n\n        this.setState({\n          isLiked: !this.state.isLiked\n        });\n      }\n    };\n\n    this.state = {\n      imageUrl: '',\n      isLiked: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchImageUrl();\n  }\n\n  render() {\n    const comment = this.props.comment;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentCardContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profileIcon\",\n          src: this.state.imageUrl,\n          alt: \"Commentor Profile Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentTextContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentUsername\",\n            children: comment.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentBody\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: comment.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentTimestamp\",\n            children: comment.timePosted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  likeComment,\n  unlikeComment\n})(Comment);","map":{"version":3,"sources":["/Users/charliewilson/personal/stan-band/client/src/components/comments/StanProfileComment.js"],"names":["React","connect","bands","likeComment","unlikeComment","Comment","Component","constructor","props","fetchImageUrl","response","get","comment","bandId","console","log","data","currentUser","likers","includes","userId","setState","imageUrl","isLiked","error","onLikeButtonClick","state","componentDidMount","render","body","timePosted","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport bands from '../../apis/bands';\nimport { likeComment, unlikeComment } from '../../actions';\nimport '../../styles/styles.css';\n\nclass Comment extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { imageUrl: '', isLiked: false };\n  }\n\n  fetchImageUrl = async () => {\n    const response = await bands.get(`?spotifyBandId=${this.props.comment.bandId}`);\n    console.log(response.data);\n    if (this.props.currentUser) {\n      // check if currentUser likes comment\n      const comment = this.props.comment;\n      try {\n        if (comment.likers.includes(this.props.currentUser.userId)) {\n          this.setState({ imageUrl: response.data[0].imageUrl, isLiked: true });\n          return;\n        }\n      } catch (error) {}\n\n    }\n\n    this.setState({ imageUrl: response.data[0].imageUrl, isLiked: false });\n  }\n\n  componentDidMount() {\n    this.fetchImageUrl();\n  }\n\n  onLikeButtonClick = () => {\n\n    if (this.props.currentUser) {\n      if (this.state.isLiked) {\n        this.props.unlikeComment(this.props.comment);\n      } else {\n        this.props.likeComment(this.props.comment);\n      }\n\n      this.setState({ isLiked: !this.state.isLiked });\n    }\n\n  }\n\n  render() {\n\n    const comment = this.props.comment;\n\n    return (\n\n        <div className=\"commentCardContainer\">\n          <div className=\"commentCard\">\n             <img className=\"profileIcon\" src={this.state.imageUrl} alt=\"Commentor Profile Icon\"/>\n            <div className=\"commentTextContent\">\n              <div className=\"commentUsername\">\n                {comment.userId}\n              </div>\n              <div className=\"commentBody\">\n                <b>{comment.body}</b>\n              </div>\n              <div className=\"commentTimestamp\">\n                {comment.timePosted}\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser.user\n  };\n};\n\nexport default connect(\n  mapStateToProps, {\n    likeComment,\n    unlikeComment\n  }\n)(Comment);\n"]},"metadata":{},"sourceType":"module"}