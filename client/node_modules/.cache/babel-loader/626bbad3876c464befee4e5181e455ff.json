{"ast":null,"code":"var _jsxFileName = \"/Users/charliewilson/personal/stan-band/client/src/components/bands/Comment.js\";\nimport React from 'react';\nimport users from '../../apis/users';\nimport '../../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchImageUrl = async () => {\n      const response = await users.get(`?userId=${this.props.comment.userId}`);\n      this.setState({\n        imageUrl: response.data[0].imageUrl\n      });\n    };\n\n    this.renderLikeIcon = () => {\n      if (this.props.currentUser) {\n        console.log('current user is logged in');\n        return;\n      }\n\n      console.log('current user is not logged in');\n    };\n\n    this.state = {\n      imageUrl: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchImageUrl();\n  }\n\n  render() {\n    const comment = this.props.comment;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentCardContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profileIcon\",\n          src: this.state.imageUrl,\n          alt: \"Commentor Profile Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentTextContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentUsername\",\n            children: comment.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentBody\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: comment.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentTimestamp\",\n            children: comment.timePosted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentLikeIcon\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"heart icon\",\n            children: [\"   \", comment.upvotes, \"   \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), this.renderLikeIcon()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(Comment);","map":{"version":3,"sources":["/Users/charliewilson/personal/stan-band/client/src/components/bands/Comment.js"],"names":["React","users","Comment","Component","constructor","props","fetchImageUrl","response","get","comment","userId","setState","imageUrl","data","renderLikeIcon","currentUser","console","log","state","componentDidMount","render","body","timePosted","upvotes","mapStateToProps","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAO,yBAAP;;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,aALmB,GAKH,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,WAAU,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,MAAO,EAA/C,CAAvB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEL,QAAQ,CAACM,IAAT,CAAc,CAAd,EAAiBD;AAA7B,OAAd;AACD,KARkB;;AAAA,SAcnBE,cAdmB,GAcF,MAAM;AAErB,UAAI,KAAKT,KAAL,CAAWU,WAAf,EAA4B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA;AACD;;AAEDD,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAED,KAvBkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEN,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAODO,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,aAAL;AACD;;AAaDc,EAAAA,MAAM,GAAG;AAEP,UAAMX,OAAO,GAAG,KAAKJ,KAAL,CAAWI,OAA3B;AAEA,wBAEI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACG;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,GAAG,EAAE,KAAKS,KAAL,CAAWN,QAA7C;AAAuD,UAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADH,eAEE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,sBACGH,OAAO,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE;AAAA,wBAAID,OAAO,CAACY;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,sBACGZ,OAAO,CAACa;AADX;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAaE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA,8BAA8Bb,OAAO,CAACc,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAKT,cAAL,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAyBD;;AAxDmC;;AA4DtC,MAAMU,eAAe,GAAGN,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,WAAW,EAAEG,KAAK,CAACH;AADd,GAAP;AAGD,CAJD;;AAMA,eAAeU,OAAO,CACpBD,eADoB,CAAP,CAEbtB,OAFa,CAAf","sourcesContent":["import React from 'react';\n\nimport users from '../../apis/users';\nimport '../../styles/styles.css';\n\nclass Comment extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { imageUrl: '' };\n  }\n\n  fetchImageUrl = async () => {\n    const response = await users.get(`?userId=${this.props.comment.userId}`);\n    this.setState({ imageUrl: response.data[0].imageUrl });\n  }\n\n  componentDidMount() {\n    this.fetchImageUrl();\n  }\n\n  renderLikeIcon = () => {\n\n    if (this.props.currentUser) {\n      console.log('current user is logged in');\n      return;\n    }\n\n    console.log('current user is not logged in');\n\n  }\n\n  render() {\n\n    const comment = this.props.comment;\n\n    return (\n\n        <div className=\"commentCardContainer\">\n          <div className=\"commentCard\">\n             <img className=\"profileIcon\" src={this.state.imageUrl} alt=\"Commentor Profile Icon\"/>\n            <div className=\"commentTextContent\">\n              <div className=\"commentUsername\">\n                {comment.userId}\n              </div>\n              <div className=\"commentBody\">\n                <b>{comment.body}</b>\n              </div>\n              <div className=\"commentTimestamp\">\n                {comment.timePosted}\n              </div>\n            </div>\n            <div className=\"commentLikeIcon\">\n              <i className=\"heart icon\">   {comment.upvotes}   </i>\n              {this.renderLikeIcon()}\n            </div>\n          </div>\n        </div>\n\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(\n  mapStateToProps\n)(Comment);\n"]},"metadata":{},"sourceType":"module"}